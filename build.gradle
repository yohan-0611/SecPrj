buildscript {
   dependencies {
      classpath("gradle.plugin.com.ewerk.gradle.plugins:querydsl-plugin:1.0.10")
   }
}
plugins {
   id 'java'
   id 'war'
   id 'org.springframework.boot' version '3.3.0-SNAPSHOT'
   id 'io.spring.dependency-management' version '1.1.4'
   //Querydsl
   id "com.ewerk.gradle.plugins.querydsl" version "1.0.10"
}
apply plugin: "com.ewerk.gradle.plugins.querydsl"

group = 'com.avi6'
version = '0.0.1-SNAPSHOT'

java {
   sourceCompatibility = '17'
}

configurations {
   compileOnly {
      extendsFrom annotationProcessor
   }
}

repositories {
   mavenCentral()
   maven { url 'https://repo.spring.io/milestone' }
   maven { url 'https://repo.spring.io/snapshot' }
}

dependencies {
   implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
   implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
   implementation 'org.springframework.boot:spring-boot-starter-web'
   implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
    implementation 'org.thymeleaf.extras:thymeleaf-extras-springsecurity6'
   
   compileOnly 'org.projectlombok:lombok'
   developmentOnly 'org.springframework.boot:spring-boot-devtools'
   runtimeOnly 'org.mariadb.jdbc:mariadb-java-client'
   runtimeOnly 'com.h2database:h2' // 예시로 H2 데이터베이스 사용
   
   annotationProcessor 'org.projectlombok:lombok'
   providedRuntime 'org.springframework.boot:spring-boot-starter-tomcat'
   testImplementation 'org.springframework.boot:spring-boot-starter-test'
  testImplementation 'org.springframework.security:spring-security-test'
  
     // querydsl(수정)
   implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
   annotationProcessor "com.querydsl:querydsl-apt:${dependencyManagement.importedProperties['querydsl.version']}:jakarta"
    annotationProcessor 'com.querydsl:querydsl-apt:5.0.0:jakarta'
   
   
   //내가 추가함(발생대응?)
   //annotationProcessor("jakarta.persistence:jakarta.persistence-api") // java.lang.NoClassDefFoundError(javax.annotation.Entity) 발생 대응
   //annotationProcessor("jakarta.annotation:jakarta.annotation-api") // java.lang.NoClassDefFoundError (javax.annotation.Generated) 발생 대응
  
     // 타임리프에서 java 의 formatter 를 이용하기 위한 의존성 추가
     //compile group 'org.thymeleaf.extras', name:'thymleaf-extras-java8time'
     implementation group: 'net.coobird', name:'thumbnailator', version:'0.4.12'
     
}

tasks.named('test') {
   useJUnitPlatform()
}
//여기서부터 추가함..


def querydslDir = "src/main/generated/queryDsl"

querydsl {
   library = "com.querydsl:querydsl-apt"
   jpa = true
   querydslSourcesDir = querydslDir
}

sourceSets {
   main.java.srcDirs = ['src/main/java', querydslDir]
}

compileQuerydsl {
   options.annotationProcessorPath = configurations.querydsl
}

configurations {
   querydsl.extendsFrom compileClasspath
}